library(tidyverse)
library(here)
source(here("R/solarpv.R"))
source(here("solarpv.R"))
solarpv
library(tidyverse)
# read in R formatted data
load(here("data/sierraczosolar.rda"))
# already in the format required for the model
head(sierraczosolar)
# plot
# lets make months names rather than labels
sierraczosolar$month <- factor(sierraczosolar$month, levels = 1:12, labels = month.abb)
# now plot
ggplot(sierraczosolar, aes(x = month, y = (Kdown_direct+Kdown_diffuse), fill=month)) +
geom_boxplot() +
labs(x = "Month", y = "Solar Radiation (W/m2)") +
theme_bw()
# run the model
solarpv(area = 0.1, solar = sierraczosolar,
clr = "green", eunit = "W", g=FALSE)
# run and save results - but don't plot
site1 <- solarpv(area = 0.1, solar = sierraczosolar,
clr = "green", eunit = "W", g = FALSE)
site1$mean
site1$annual
# remove the first year from the dataset
sierraczosolar <- sierraczosolar %>%
filter(year > 1944)
# now run the model again
site1 <- solarpv(area = 0.1,
solar = sierraczosolar, clr = "green", eunit = "W", g = TRUE)
# consider a different PV array that only uses
# diffuse and has non standard efficiency (0.6)
site2 <- solarpv(area = 0.1,
solar = sierraczosolar, clr = "green",
eunit = "W", g = FALSE, eff = 0.6, etype = "direct")
site2$mean
library(tidyverse)
# first come up with varying values for efficiency
# if we don't know efficiency exactly , lets try 20 samples
eff <- rnorm(mean = 0.6, sd = 0.1, n = 20)
# use map from purrr to run model for all values of eff
# notice how map adds the one parameter that is missing from the input list
site2 <- eff %>% map(~ solarpv(area = 0.1,
solar = sierraczosolar, clr = "green",
eunit = "W", g = FALSE, etype = "direct", eff = .x))
head(site2)
head(str(site2))
# this is pretty messy - but we can extract a useful data structure,lets say we want
# just the annual data (not the mean annual time series), and then reformat as a data frame with nice column names
tmp <- map_dfr(site2, `[`, c("annual"))
site2df <- data.frame(year = tmp$annual$year, elect = tmp$annual$elect)
head(site2df)
# now we could plot
ggplot(site2df, aes(year, elect, group = year)) +
geom_boxplot() +
labs(y = "Electricity generated in W")
# we also might want an average across parameter uncertainty
site2_average <- site2df %>%
group_by(year) %>%
dplyr::summarize(elect = mean(elect))
# now add this to the plot - note that we remove the grouping by using group=1
ggplot(site2df, aes(year, elect, group = year)) +
geom_boxplot() +
labs(y = "Electricity in W") +
geom_line(data = site2_average, aes(year, elect, group = 1), col = "orange")
# we could also plot how the mean annual electricity varies with efficiency (eff from above)
site2[[1]]
tmp <- map_df(site2, `[`, c("mean"))
# how variable is electricity generation (mean over all time) with uncertainty in solar efficiency
site2_mean <- data.frame(eff = eff, elect = tmp)
ggplot(site2_mean, aes(y = mean)) +
geom_boxplot() +
labs(x = "Electricity in W")
# or to see what the sensitivity looks like
ggplot(site2_mean, aes(eff, mean)) +
geom_point() +
labs(y = "Electricity in W", x = "Solar Efficiency")
# my best guess
mean(site2_mean$mean)
library(tidyverse)
library(here)
library(janitor)
# Define ranges for farm size and years
farm_sizes <- seq(10, 100, by = 10) # Example range: 10 to 100 acres
years <- seq(1995, 2025, by = 1)   # Years from 1995 to 2025
# Generate a data frame of combinations for farm size and years
results <- expand.grid(farm_size = farm_sizes, year = years)
View(results)
# Apply the profit function to each combination
results <- results %>%
rowwise() %>%
mutate(profit = profit_from_almond_yield(farm_size, year)) %>%
ungroup()
# Chunk 1
library(tidyverse)
library(here)
library(janitor)
# Chunk 2
climate_data <- read_table(here("data", "clim.txt")) %>% clean_names()
# Chunk 3
#' Calculate Almond Yield
#'
#' @description Computes the maximum, minimum, and mean almond yield for each year
#' based on climate data inputs such as minimum February temperature and January precipitation.
#'
#' @author Madison Enda and Joshua Mull for EDS230 with Naomi Tague
#'
#' @param climate_data A data frame containing climate data with columns for `month`, `year`,
#' `tmin_c` (minimum daily temperature in Celsius), and `precip` (daily precipitation in millimeters).
#' @param Tn1 Coefficient for the minimum February temperature.
#' Default is -0.015.
#' @param Tn2 Quadratic term coefficient of the minimum February temperature.
#' Default is -0.0046.
#' @param P1 Coefficient for January precipitation. Default is -0.07.
#' @param P2 Quadratic term coefficient of January precipitation. Default is 0.0043.
#' @param i Intercept term 0.28.
#'
#' @return A list containing: min, max and mean almond yields across all years
almond_yield <- function(climate_data, Tn1 = -0.015, Tn2 = -0.0046, P1 = -0.07, P2 = 0.0043, i = 0.28) {
# filter data for min temp in February
feb_temp <- climate_data %>%
filter(month == 2) %>%
group_by(year) %>%
summarize(min_feb_temp_c = min(tmin_c, na.rm = TRUE), .groups = "drop")
# filter data for total rain in January
jan_p <- climate_data %>%
filter(month == 1) %>%
group_by(year) %>%
summarize(jan_precip = sum(precip, na.rm = TRUE), .groups = "drop")
# join data frames
climate_data_jan_feb <- left_join(feb_temp, jan_p, by = "year")
# Compute yield for each year
climate_data_jan_feb <- climate_data_jan_feb %>%
mutate(yield = Tn1 * min_feb_temp_c + Tn2 * min_feb_temp_c^2 + P1 * jan_precip + P2 * jan_precip^2 + i)
# Compute max, min, mean result
maxyield <- max(climate_data_jan_feb$yield, na.rm = TRUE)
minyield <- min(climate_data_jan_feb$yield, na.rm = TRUE)
meanyield <- mean(climate_data_jan_feb$yield, na.rm = TRUE)
# Return max, min, and mean yields
return(meanyield)
}
# Chunk 4
#' computes profit from power generation
#' @param farm_size (acres of farm land)
#' @param year (year when almonds were harvested, from 1995-2025)
#' @param meanyield (result from almond_yield function)
#' @return meanprofit
profit_from_almond_yield <- function(farm_size, year) {
# Create vectors of year and price
date <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025)
price <- c(2.48, 2.08, 1.56, 1.41, 0.86, 0.97, 0.91, 1.11, 1.57, 2.21, 2.81, 2.06, 1.75, 1.45, 1.65, 1.79, 1.99, 2.58, 3.21, 4.00, 3.13, 2.39, 2.53, 2.50, 2.45, 1.71, 1.86, 1.40, 1.64, 1.91, 2.60)
# Join vectors in data frame
almond_price <- data.frame(date, price)
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000 )
# Filter the data to year parameter
almond_price_filtered <- almond_price %>%
filter(date == year)
# Call almond yield function to find meanyield
meanyield <- almond_yield(climate_data)
# Use the price per ton from subsequent year to find price by acres and
meanprofit <- meanyield * farm_size *  almond_price_filtered$price_per_ton
return(meanprofit)
}
# Chunk 5
profit_from_almond_yield(farm_size= 50, year= 1999)
# Chunk 6
# Define ranges for farm size and years
farm_sizes <- seq(10, 100, by = 10) # Example range: 10 to 100 acres
years <- seq(1995, 2025, by = 1)   # Years from 1995 to 2025
# Generate a data frame of combinations for farm size and years
results <- expand.grid(farm_size = farm_sizes, year = years)
# Apply the profit function to each combination
results <- results %>%
rowwise() %>%
mutate(profit = profit_from_almond_yield(farm_size, year)) %>%
ungroup()
# Print the results
print(results)
# Chunk 7
# Chunk 8
View(results)
# Define ranges for farm size and years
farm_sizes <- seq(10, 100, by = 1) # Example range: 10 to 100 acres
years <- 1995   # Years from 1995 to 2025
# Generate a data frame of combinations for farm size and years
results <- expand.grid(farm_size = farm_sizes, year = years)
# Apply the profit function to each combination
results <- results %>%
rowwise() %>%
mutate(profit = profit_from_almond_yield(farm_size, year)) %>%
ungroup()
# Print the results
print(results)
[Farm Flavor](https://farmflavor.com/california/top-california-agriculture-facts/)
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000 )
date <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025)
price <- c(2.48, 2.08, 1.56, 1.41, 0.86, 0.97, 0.91, 1.11, 1.57, 2.21, 2.81, 2.06, 1.75, 1.45, 1.65, 1.79, 1.99, 2.58, 3.21, 4.00, 3.13, 2.39, 2.53, 2.50, 2.45, 1.71, 1.86, 1.40, 1.64, 1.91, 2.60)
# Join vectors in data frame
almond_price <- data.frame(date, price)
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000 )
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000)
View(almond_price)
View(almond_price)
profit_from_almond_yield(farm_size = 383, year = date)
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date)
View(ave_ap_df)
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(ave_ap_df$ave_acre_profit - 4037)
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(score(ave_ap_df$ave_acre_profit))
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(scale(ave_ap_df$ave_acre_profit))
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(z_score = scale(ave_ap_df$ave_acre_profit))
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(Z_score = scale(ave_ap_df$ave_acre_profit))
ave_acre_profit <- profit_from_almond_yield(farm_size = 383, year = date)
ave_ap_df <- data.frame(ave_acre_profit, date) %>%
mutate(z_score = scale(ave_ap_df$ave_acre_profit))
numbers <- c(
250, 350, 400, 500, 600, 300, 450, 390, 370, 410,
420, 360, 430, 395, 380, 405, 470, 490, 375, 385,
415, 440, 320, 340, 520, 310, 395, 450, 480, 370, 400
)
year_variation_profit <- profit_from_almond_yield(farm_size = 383, year = date)
year_variation_df <- data.frame(ave_acre_profit, date) %>%
mutate(z_score = scale(ave_ap_df$ave_acre_profit))
numbers <- c(
250, 350, 400, 500, 600, 300, 450, 390, 370, 410,
420, 360, 430, 395, 380, 405, 470, 490, 375, 385,
415, 440, 320, 340, 520, 310, 395, 450, 480, 370, 400
)
price
ave_acre_profit <- profit_from_almond_yield(farm_size = numbers, year = 2006)
print(ave_acre_profit)
ave_acre_profit <- profit_from_almond_yield(farm_size = numbers, year = 2011)
print(ave_acre_profit)
ave_acre_profit_df <-  data.frame(ave_acre_profit, year = 2011)
View(ave_acre_profit_df)
ave_acre_profit_df <-  data.frame(ave_acre_profit, year = 2011) %>%
mutate(z_score = scale(ave_acre_profit_df$ave_acre_profit))
year_variation_profit <- profit_from_almond_yield(farm_size = 383, year = date)
year_variation_df <- data.frame(ave_acre_profit, date) %>%
mutate(z_score = scale(year_variation_df$ave_acre_profit))
numbers <- c(
250, 350, 400, 500, 600, 300, 450, 390, 370, 410,
420, 360, 430, 395, 380, 405, 470, 490, 375, 385,
415, 440, 320, 340, 520, 310, 395, 450, 480, 370, 400
)
ave_acre_profit <- profit_from_almond_yield(farm_size = numbers, year = 2011)
print(ave_acre_profit)
ave_acre_profit_df <-  data.frame(ave_acre_profit, year = 2011) %>%
mutate(z_score = scale(ave_acre_profit_df$ave_acre_profit))
year_variation_profit <- profit_from_almond_yield(farm_size = 383, year = date)
# Chunk 1
library(tidyverse)
library(here)
library(janitor)
# Chunk 2
climate_data <- read_table(here("data", "clim.txt")) %>% clean_names()
# Chunk 3
#' Calculate Almond Yield
#'
#' @description Computes the maximum, minimum, and mean almond yield for each year
#' based on climate data inputs such as minimum February temperature and January precipitation.
#'
#' @author Madison Enda and Joshua Mull for EDS230 with Naomi Tague
#'
#' @param climate_data A data frame containing climate data with columns for `month`, `year`,
#' `tmin_c` (minimum daily temperature in Celsius), and `precip` (daily precipitation in millimeters).
#' @param Tn1 Coefficient for the minimum February temperature.
#' Default is -0.015.
#' @param Tn2 Quadratic term coefficient of the minimum February temperature.
#' Default is -0.0046.
#' @param P1 Coefficient for January precipitation. Default is -0.07.
#' @param P2 Quadratic term coefficient of January precipitation. Default is 0.0043.
#' @param i Intercept term 0.28.
#'
#' @return A list containing: min, max and mean almond yields across all years
almond_yield <- function(climate_data, Tn1 = -0.015, Tn2 = -0.0046, P1 = -0.07, P2 = 0.0043, i = 0.28) {
# filter data for min temp in February
feb_temp <- climate_data %>%
filter(month == 2) %>%
group_by(year) %>%
summarize(min_feb_temp_c = min(tmin_c, na.rm = TRUE), .groups = "drop")
# filter data for total rain in January
jan_p <- climate_data %>%
filter(month == 1) %>%
group_by(year) %>%
summarize(jan_precip = sum(precip, na.rm = TRUE), .groups = "drop")
# join data frames
climate_data_jan_feb <- left_join(feb_temp, jan_p, by = "year")
# Compute yield for each year
climate_data_jan_feb <- climate_data_jan_feb %>%
mutate(yield = Tn1 * min_feb_temp_c + Tn2 * min_feb_temp_c^2 + P1 * jan_precip + P2 * jan_precip^2 + i)
# Compute max, min, mean result
maxyield <- max(climate_data_jan_feb$yield, na.rm = TRUE)
minyield <- min(climate_data_jan_feb$yield, na.rm = TRUE)
meanyield <- mean(climate_data_jan_feb$yield, na.rm = TRUE)
# Return max, min, and mean yields
return(meanyield)
}
# Chunk 4
#' computes profit from power generation
#' @param farm_size (acres of farm land)
#' @param year (year when almonds were harvested, from 1995-2025)
#' @param meanyield (result from almond_yield function)
#' @return meanprofit
profit_from_almond_yield <- function(farm_size, year) {
# Create vectors of year and price
date <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025)
price <- c(2.48, 2.08, 1.56, 1.41, 0.86, 0.97, 0.91, 1.11, 1.57, 2.21, 2.81, 2.06, 1.75, 1.45, 1.65, 1.79, 1.99, 2.58, 3.21, 4.00, 3.13, 2.39, 2.53, 2.50, 2.45, 1.71, 1.86, 1.40, 1.64, 1.91, 2.60)
# Join vectors in data frame
almond_price <- data.frame(date, price)
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000 )
# Filter the data to year parameter
almond_price_filtered <- almond_price %>%
filter(date == year)
# Call almond yield function to find meanyield
meanyield <- almond_yield(climate_data)
# Use the price per ton from subsequent year to find price by acres and
meanprofit <- meanyield * farm_size *  almond_price_filtered$price_per_ton
return(meanprofit)
}
# Chunk 5
profit_from_almond_yield(farm_size= 50, year= 1999)
# Chunk 6
date <- c(1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025)
price <- c(2.48, 2.08, 1.56, 1.41, 0.86, 0.97, 0.91, 1.11, 1.57, 2.21, 2.81, 2.06, 1.75, 1.45, 1.65, 1.79, 1.99, 2.58, 3.21, 4.00, 3.13, 2.39, 2.53, 2.50, 2.45, 1.71, 1.86, 1.40, 1.64, 1.91, 2.60)
# Join vectors in data frame
almond_price <- data.frame(date, price)
# Create a column that is price per ton
almond_price <- almond_price %>%
mutate(price_per_ton = price * 2000)
# Chunk 7
year_variation_profit <- profit_from_almond_yield(farm_size = 383, year = date)
year_variation_df <- data.frame(year_variation_profit, date) %>%
mutate(z_score = scale(ave_ap_df$ave_acre_profit))
year_variation_profit <- profit_from_almond_yield(farm_size = 383, year = date)
year_variation_df <- data.frame(year_variation_profit, date) %>%
mutate(z_score = scale(year_variation_df$ave_acre_profit))
